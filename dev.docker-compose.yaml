services:
  attendee-worker-local:
    build: ./
    volumes:
     - .:/attendee
    networks:
      - attendee_network
    environment:
      - POSTGRES_HOST=postgres
      - REDIS_URL=redis://redis:6379/5
      - DJANGO_SETTINGS_MODULE=attendee.settings.development
    command: "celery -A attendee worker -l INFO"

  attendee-scheduler-local:
    build: ./
    volumes:
     - .:/attendee
    networks:
      - attendee_network
    environment:
      - POSTGRES_HOST=postgres
      - REDIS_URL=redis://redis:6379/5
      - DJANGO_SETTINGS_MODULE=attendee.settings.development
    command: "python manage.py run_scheduler"

  attendee-app-local:
    build: ./
    volumes:
     - .:/attendee
    networks:
      - attendee_network
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_HOST=postgres
      - REDIS_URL=redis://redis:6379/5
      - DJANGO_SETTINGS_MODULE=attendee.settings.development
    command: python manage.py runserver 0.0.0.0:8000

  attendee-webpage-streamer-local:
    build: ./
    user: "1000:1000"
    init: true                       # get a real PID 1 (you already ship tini; okay either way)
    read_only: true                  # harden the root FS
    shm_size: "1gb"                  # fast shared memory for Chrome/WebRTC
    security_opt:
      - seccomp=./chrome.json        # tighten syscalls (Linux only)
      # DO NOT set no-new-privileges:true (it would break setuid sandbox)
    cap_drop: ["ALL"]                # drop all Linux caps
    tmpfs:
      - /run/user/1000:rw,noexec,nosuid,nodev,mode=0700,uid=1000,gid=1000,size=64m
      - /tmp:rw,exec,nosuid,nodev,size=256m
      # (We use shm_size for /dev/shm; tmpfs here is just for /run and /tmp)
    volumes:
      - .:/attendee
      - chrome-home:/home/app        # writable home for Chrome profile/cache
    networks:
      - attendee_network
    ports:
      - "8001:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=attendee.settings.development
      - XDG_RUNTIME_DIR=/run/user/1000
      - CHROME_USER_DATA_DIR=/home/app/chrome-data
      - PULSE_LATENCY_MSEC=20
      - PA_DEBUG=0                   # set to 1 if you want entrypoint debug
    command: "python bots/webpage_streamer/run_webpage_streamer.py"

  postgres:
    image: postgres:15.3-alpine
    environment:
      POSTGRES_DB: attendee_development
      POSTGRES_USER: attendee_development_user
      POSTGRES_PASSWORD: attendee_development_user
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
    networks:
      - attendee_network
    restart: unless-stopped


  redis:
    image: redis:7-alpine
    networks:
      - attendee_network
    restart: unless-stopped
    volumes:
      - redis:/data/redis

networks:
  attendee_network:
    driver: bridge

volumes:
  postgres:
  redis:
  chrome-home:
